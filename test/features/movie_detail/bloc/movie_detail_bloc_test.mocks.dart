// Mocks generated by Mockito 5.3.0 from annotations
// in movies_app/test/features/movie_detail/bloc/movie_detail_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_app/core/network/base_pagination_response.dart' as _i2;
import 'package:movies_app/data/movie_repository/movie_remote_service.dart'
    as _i4;
import 'package:movies_app/data/movie_repository/movie_repository.dart' as _i7;
import 'package:movies_app/features/movie_detail/models/movie_detail_model.dart'
    as _i3;
import 'package:movies_app/features/now_playing_movies/models/movies_model.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBasePaginationResponse_0<T> extends _i1.SmartFake
    implements _i2.BasePaginationResponse<T> {
  _FakeBasePaginationResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeMovieDetailModel_1 extends _i1.SmartFake
    implements _i3.MovieDetailModel {
  _FakeMovieDetailModel_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeDateTime_2 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [MovieRemoteService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteService extends _i1.Mock
    implements _i4.MovieRemoteService {
  MockMovieRemoteService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.BasePaginationResponse<List<_i6.MovieModel>>>
      getNowPlayingMovies(int? page) => (super.noSuchMethod(
          Invocation.method(#getNowPlayingMovies, [page]),
          returnValue:
              _i5.Future<_i2.BasePaginationResponse<List<_i6.MovieModel>>>.value(
                  _FakeBasePaginationResponse_0<List<_i6.MovieModel>>(this,
                      Invocation.method(#getNowPlayingMovies, [page])))) as _i5
          .Future<_i2.BasePaginationResponse<List<_i6.MovieModel>>>);
  @override
  _i5.Future<_i3.MovieDetailModel> getMovieDetail(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [movieId]),
              returnValue: _i5.Future<_i3.MovieDetailModel>.value(
                  _FakeMovieDetailModel_1(
                      this, Invocation.method(#getMovieDetail, [movieId]))))
          as _i5.Future<_i3.MovieDetailModel>);
}

/// A class which mocks [IMovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIMovieRepository extends _i1.Mock implements _i7.IMovieRepository {
  MockIMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i6.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(Invocation.method(#getNowPlayingMovies, []),
              returnValue:
                  _i5.Future<List<_i6.MovieModel>>.value(<_i6.MovieModel>[]))
          as _i5.Future<List<_i6.MovieModel>>);
  @override
  _i5.Future<_i3.MovieDetailModel> getMovieDetail(int? movieId) =>
      (super.noSuchMethod(Invocation.method(#getMovieDetail, [movieId]),
              returnValue: _i5.Future<_i3.MovieDetailModel>.value(
                  _FakeMovieDetailModel_1(
                      this, Invocation.method(#getMovieDetail, [movieId]))))
          as _i5.Future<_i3.MovieDetailModel>);
}

/// A class which mocks [MovieDetailModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailModel extends _i1.Mock implements _i3.MovieDetailModel {
  MockMovieDetailModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get adult =>
      (super.noSuchMethod(Invocation.getter(#adult), returnValue: false)
          as bool);
  @override
  set adult(bool? _adult) =>
      super.noSuchMethod(Invocation.setter(#adult, _adult),
          returnValueForMissingStub: null);
  @override
  set backdropPath(String? _backdropPath) =>
      super.noSuchMethod(Invocation.setter(#backdropPath, _backdropPath),
          returnValueForMissingStub: null);
  @override
  set belongsToCollection(Object? _belongsToCollection) => super.noSuchMethod(
      Invocation.setter(#belongsToCollection, _belongsToCollection),
      returnValueForMissingStub: null);
  @override
  int get budget =>
      (super.noSuchMethod(Invocation.getter(#budget), returnValue: 0) as int);
  @override
  set budget(int? _budget) =>
      super.noSuchMethod(Invocation.setter(#budget, _budget),
          returnValueForMissingStub: null);
  @override
  List<_i3.Genres> get genres => (super.noSuchMethod(Invocation.getter(#genres),
      returnValue: <_i3.Genres>[]) as List<_i3.Genres>);
  @override
  set genres(List<_i3.Genres>? _genres) =>
      super.noSuchMethod(Invocation.setter(#genres, _genres),
          returnValueForMissingStub: null);
  @override
  set homepage(String? _homepage) =>
      super.noSuchMethod(Invocation.setter(#homepage, _homepage),
          returnValueForMissingStub: null);
  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  set id(int? _id) => super.noSuchMethod(Invocation.setter(#id, _id),
      returnValueForMissingStub: null);
  @override
  set imdbId(String? _imdbId) =>
      super.noSuchMethod(Invocation.setter(#imdbId, _imdbId),
          returnValueForMissingStub: null);
  @override
  String get originalLanguage =>
      (super.noSuchMethod(Invocation.getter(#originalLanguage), returnValue: '')
          as String);
  @override
  set originalLanguage(String? _originalLanguage) => super.noSuchMethod(
      Invocation.setter(#originalLanguage, _originalLanguage),
      returnValueForMissingStub: null);
  @override
  String get originalTitle =>
      (super.noSuchMethod(Invocation.getter(#originalTitle), returnValue: '')
          as String);
  @override
  set originalTitle(String? _originalTitle) =>
      super.noSuchMethod(Invocation.setter(#originalTitle, _originalTitle),
          returnValueForMissingStub: null);
  @override
  set overview(String? _overview) =>
      super.noSuchMethod(Invocation.setter(#overview, _overview),
          returnValueForMissingStub: null);
  @override
  double get popularity =>
      (super.noSuchMethod(Invocation.getter(#popularity), returnValue: 0.0)
          as double);
  @override
  set popularity(double? _popularity) =>
      super.noSuchMethod(Invocation.setter(#popularity, _popularity),
          returnValueForMissingStub: null);
  @override
  set posterPath(String? _posterPath) =>
      super.noSuchMethod(Invocation.setter(#posterPath, _posterPath),
          returnValueForMissingStub: null);
  @override
  List<_i3.ProductionCompanies> get productionCompanies =>
      (super.noSuchMethod(Invocation.getter(#productionCompanies),
              returnValue: <_i3.ProductionCompanies>[])
          as List<_i3.ProductionCompanies>);
  @override
  set productionCompanies(
          List<_i3.ProductionCompanies>? _productionCompanies) =>
      super.noSuchMethod(
          Invocation.setter(#productionCompanies, _productionCompanies),
          returnValueForMissingStub: null);
  @override
  List<_i3.ProductionCountries> get productionCountries =>
      (super.noSuchMethod(Invocation.getter(#productionCountries),
              returnValue: <_i3.ProductionCountries>[])
          as List<_i3.ProductionCountries>);
  @override
  set productionCountries(
          List<_i3.ProductionCountries>? _productionCountries) =>
      super.noSuchMethod(
          Invocation.setter(#productionCountries, _productionCountries),
          returnValueForMissingStub: null);
  @override
  DateTime get releaseDate => (super.noSuchMethod(
          Invocation.getter(#releaseDate),
          returnValue: _FakeDateTime_2(this, Invocation.getter(#releaseDate)))
      as DateTime);
  @override
  set releaseDate(DateTime? _releaseDate) =>
      super.noSuchMethod(Invocation.setter(#releaseDate, _releaseDate),
          returnValueForMissingStub: null);
  @override
  int get revenue =>
      (super.noSuchMethod(Invocation.getter(#revenue), returnValue: 0) as int);
  @override
  set revenue(int? _revenue) =>
      super.noSuchMethod(Invocation.setter(#revenue, _revenue),
          returnValueForMissingStub: null);
  @override
  set runtime(int? _runtime) =>
      super.noSuchMethod(Invocation.setter(#runtime, _runtime),
          returnValueForMissingStub: null);
  @override
  List<_i3.SpokenLanguages> get spokenLanguages =>
      (super.noSuchMethod(Invocation.getter(#spokenLanguages),
          returnValue: <_i3.SpokenLanguages>[]) as List<_i3.SpokenLanguages>);
  @override
  set spokenLanguages(List<_i3.SpokenLanguages>? _spokenLanguages) =>
      super.noSuchMethod(Invocation.setter(#spokenLanguages, _spokenLanguages),
          returnValueForMissingStub: null);
  @override
  String get status =>
      (super.noSuchMethod(Invocation.getter(#status), returnValue: '')
          as String);
  @override
  set status(String? _status) =>
      super.noSuchMethod(Invocation.setter(#status, _status),
          returnValueForMissingStub: null);
  @override
  set tagline(String? _tagline) =>
      super.noSuchMethod(Invocation.setter(#tagline, _tagline),
          returnValueForMissingStub: null);
  @override
  String get title =>
      (super.noSuchMethod(Invocation.getter(#title), returnValue: '')
          as String);
  @override
  set title(String? _title) =>
      super.noSuchMethod(Invocation.setter(#title, _title),
          returnValueForMissingStub: null);
  @override
  bool get video =>
      (super.noSuchMethod(Invocation.getter(#video), returnValue: false)
          as bool);
  @override
  set video(bool? _video) =>
      super.noSuchMethod(Invocation.setter(#video, _video),
          returnValueForMissingStub: null);
  @override
  double get voteAverage =>
      (super.noSuchMethod(Invocation.getter(#voteAverage), returnValue: 0.0)
          as double);
  @override
  set voteAverage(double? _voteAverage) =>
      super.noSuchMethod(Invocation.setter(#voteAverage, _voteAverage),
          returnValueForMissingStub: null);
  @override
  int get voteCount =>
      (super.noSuchMethod(Invocation.getter(#voteCount), returnValue: 0)
          as int);
  @override
  set voteCount(int? _voteCount) =>
      super.noSuchMethod(Invocation.setter(#voteCount, _voteCount),
          returnValueForMissingStub: null);
  @override
  String get fullImageUrl =>
      (super.noSuchMethod(Invocation.getter(#fullImageUrl), returnValue: '')
          as String);
  @override
  String get fullBackDropImageUrl =>
      (super.noSuchMethod(Invocation.getter(#fullBackDropImageUrl),
          returnValue: '') as String);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
